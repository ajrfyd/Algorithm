//! InsertionSort(삽입정렬) : 각 숫자를 적절한 위치에 삽입하는 방법 

// 각 숫자를 적절한 위치에 삽입하면 어떨까? (필요할때만 바꾼다)

// 왼쪽과 오른쪽 값을 비교해 오른쪽 원소가 작다면 왼쪽의 적절한 위치(순서)에 삽입

// 반복이 진행되면서 항상 왼쪽은 정렬이 되어 있다고 가정하기 때문에 

// 당장 자신보다 오른쪽이 크다면 멈추면 된다.

// 거의 정렬된 상태라면 굉장히 효율적이다.

// 선택정렬, 버블정렬과 시간복잡도는 같지만 세가지 중 가장 빠르다.

let arr = [1, 10, 5, 8, 7, 6, 4, 3, 2, 9];

function sol(array) { 
  let tmp = 0;
  for(let i = 0; i < arr.length; i++) {
    let j = i;
    while(array[j] > array[j + 1]) {
      // 앞의 원소가 뒤위 원소보다 클때까지 
      // 크면 바꿔준다.
      // i(j)가 증가하는 동안 j + 1이랑 비교 하고
      // i(j)가 커지면 j앞의 원소들은 정렬된 상태이기 때문에 빠르다
      tmp = array[j + 1];
      array[j + 1] = arr[j]
      arr[j] = tmp;
      j--;
      // console.log(j)
    }
  }

  return array;
}

console.log(sol(arr))